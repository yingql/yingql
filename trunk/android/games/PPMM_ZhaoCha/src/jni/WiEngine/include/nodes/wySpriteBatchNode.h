/* * Copyright (c) 2010 WiYun Inc. * Permission is hereby granted, free of charge, to any person obtaining a copy * of this software and associated documentation files (the "Software"), to deal * in the Software without restriction, including without limitation the rights * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the Software is * furnished to do so, subject to the following conditions: * The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software. * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN * THE SOFTWARE. */#ifndef __wySpirteBatchNode_h__#define __wySpirteBatchNode_h__#include "wyNode.h"#include "wySpriteEx.h"class wySpriteEx;class wyMWSprite;/** * @class wySpriteBatchNode * * 用于图像节点的批处理，仅接受 \link wySpriteEx wySpriteEx \endlink 作为子节点。 * 所有子节点共享一张贴图，所有节点的绘制一次完成，可提高性能。 */class wySpriteBatchNode : public wyNode {	friend class wySpriteEx;	friend class wyMWSprite;protected:	wyTextureAtlas* m_atlas;	wyBlendFunc		m_blendFunc;	/**	 * 标识是否抖动图片, 抖动可以消除某些颜色值丰富的图片显示时的渐变感	 */	bool m_dither;	/// 是否打开alpha blending, 缺省是打开的	bool m_blend;protected:	wySpriteBatchNode();	/**	 * 添加一个\link wySpriteEx wySpriteEx\endlink 对象到atlas中, 在这个方法调用前,	 * sprite对象已经是子节点, 并且已经被分配了一个atlas索引. 如果这个sprite对象的atlas	 * 索引小于0, 则不做任何事	 *	 * @param sprite \link wySpriteEx wySpriteEx\endlink
	 */	void addSprite(wySpriteEx* sprite);	/**	 * 从atlas中去掉这个\link wySpriteEx wySpriteEx\endlink 对象, 如果这个sprite对象的atlas	 * 索引小于0, 则不做任何事	 *	 * @param sprite \link wySpriteEx wySpriteEx\endlink
	 */	void removeSprite(wySpriteEx* sprite);	/**	 * 初始化
	 */	void init();	/**	 * 更新子节点的转换矩阵
	 */	void updateChildrenTransform();	/**	 * 只画一定范围内的顶点. \link wyMWSprite wyMWSprite\endlink 需要使用这个方法	 * 来精确控制什么时候画什么部分	 *	 * @param start 起始的Quad	 * @param count 画的Quad的个数
	 */	void drawRange(int start, int count);public:	/**	 * 创建一个wySpriteBatchNode类型的节点	 *	 * @param[in] tex 贴图	 */	static wySpriteBatchNode* make(wyTexture2D* tex);	/**	 * 构造函数	 *	 * @param[in] tex 贴图	 */	wySpriteBatchNode(wyTexture2D* tex);		///析构函数	virtual ~wySpriteBatchNode();	///返回图片集	wyTextureAtlas* getTexAtlas() { return m_atlas; }		/// 设置贴图	virtual void setTexture(wyTexture2D* tex);		/// 获得贴图	virtual wyTexture2D* getTexture();		/// @see wyNode::draw()	virtual void draw();		/// @see wyNode::visit()	virtual void visit();		/// @see wyNode::addChild(wyNode*, int, int)	virtual void addChild(wyNode* child, int z, int tag);		/// @see wyNode::removeChild(wyNode*, bool)	virtual void removeChild(wyNode* child, bool cleanup); 	/// @see wyNode::reorderChild(wyNode*, int);	virtual int reorderChild(wyNode* child, int z);	/**	 * 是否打开抖动	 *	 * @return true表示打开抖动, false表示不打开抖动	 */	bool isDither() { return m_dither; }	/**	 * 设置是否打开抖动	 *	 * @param flag true表示打开抖动, false表示不打开抖动	 */	void setDither(bool flag) { m_dither = flag; }	/**	 * 是否进行alpha渲染	 *	 * @return true表示打开alpha blending	 */	bool isBlend() { return m_blend; }	/**	 * 是否打开alpha渲染, 对于不透明的大图片, 可以考虑关闭blend以提升性能	 *	 * @param flag true表示打开alpha渲染	 */	void setBlend(bool flag) { m_blend = flag; }};#endif